{"version":3,"sources":["components/SearchBox.tsx","components/Card.tsx","components/CardList.tsx","components/Scroll.tsx","components/ErrorBoundry.tsx","variable.ts","containers/App.tsx","action.ts","reducers.ts","index.tsx"],"names":["SearcBox","props","onChange","searchChange","className","type","placeholder","Card","id","name","email","style","cursor","alt","src","CardList","robots","margin","width","map","user","i","Scroll","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","searchField","useSelector","searchRobots","requestRobots","isPending","dispatch","useDispatch","onRequestRobots","fetch","then","responses","json","data","payload","catch","filteredRobots","filter","robot","toLowerCase","includes","useEffect","event","text","currentTarget","value","initialStateSearch","initialStateRobots","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94e2e961.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface Props {\n  searchChange: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst SearcBox: React.FC<Props> = (props) => {\n  return (\n    <input\n      onChange={props.searchChange}\n      className=\"pa3 ba b--green bg-lightest-blue mb3\"\n      type=\"search\"\n      placeholder=\"search robots\"\n    />\n  );\n};\n\nexport default SearcBox;\n","import React from \"react\";\n\ninterface Props {\n  id: number;\n  name: string;\n  email: string;\n}\n\nconst Card: React.FC<Props> = ({ id, name, email }) => {\n  return (\n    <div\n      className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow-5 \"\n      style={{ cursor: \"pointer\" }}\n    >\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2> {name} </h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\ninterface Props {\n  robots: any[];\n}\n\nconst CardList: React.FC<Props> = ({ robots }) => {\n  return (\n    <div style={{ margin: \"0 auto\", width: \"80%\" }}>\n      {robots.map((user, i) => {\n        return (\n          <Card key={i} id={user.id} name={user.name} email={user.email} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport \"./Scroll.css\";\n\nconst Scroll: React.FC<React.PropsWithChildren<{}>> = (props) => {\n  return (\n    <div\n      className=\"scroll\"\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\ntype State = {\n  hasError: boolean;\n};\n\ntype Props = {};\n\nclass ErrorBoundry extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error: Error, info: any) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <h1> Ooops! that is not good </h1>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default ErrorBoundry;\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import React, { useEffect } from \"react\";\nimport SearcBox from \"../components/SearchBox\";\nimport Cardlist from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestRobots, setSearchField } from \"../action\";\n\ntype Robots = {\n  name: string;\n};\n\ninterface State {\n  searchRobots: {\n    searchField: string;\n  };\n  requestRobots: {\n    isPending: boolean;\n    robots: Robots[];\n    error: string;\n  };\n}\n\nconst App: React.FC<{}> = (props) => {\n  const searchField = useSelector(\n    (state: State) => state.searchRobots.searchField\n  );\n  const robots = useSelector((state: State) => state.requestRobots.robots);\n  const isPending = useSelector(\n    (state: State) => state.requestRobots.isPending\n  );\n  const dispatch = useDispatch();\n\n  const onRequestRobots = () => dispatch(requestRobots());\n  const onSearchChange = (event: React.FormEvent<HTMLInputElement>) =>\n    dispatch(setSearchField(event.currentTarget.value));\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  useEffect(() => {\n    onRequestRobots();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isPending ? (\n    <h1 className=\"tc\"> loading </h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\"> RoboFriends </h1>\n      <SearcBox searchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundry>\n          <Cardlist robots={filteredRobots} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n};\n\nexport default App;\n\n// const mapStateToProps = (state) => ({\n//   searchField: state.searchRobots.searchField,\n//   ...state.requestRobots,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n//   onRequestRobots: () => dispatch(requestRobots()),\n// });\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./variable\";\nimport redux from \"redux\";\n\nexport const setSearchField = (text: string) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch: redux.Dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((responses) => responses.json())\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((error) =>\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n    );\n};\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./variable\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\ninterface actionType {\n  type?: string;\n  payload?: any;\n}\n\nexport const searchRobots = (\n  state = initialStateSearch,\n  action: actionType = {}\n) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (\n  state = initialStateRobots,\n  action: actionType = {}\n) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst rootReducers = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}